{"version":3,"file":"main.mjs","sources":["../../src/core/marker/handleEvent.ts","../../src/data/datas.ts","../../src/core/marker/point.ts","../../src/core/marker/index.ts","../../src/core/layer/baseLayer.ts","../../src/data/province.ts","../../src/core/layer/provinceLayer.ts","../../src/core/layer/layerEvent.ts","../../src/core/windows.ts","../../src/views/index.vue","../../../../../../@vite-plugin-pages/generated-pages?id=pages-generated","../../src/main.ts"],"sourcesContent":["import ol, { Overlay } from \"ol\";\nimport { Select } from \"ol/interaction\";\nimport { Point } from \"ol/geom\";\n\nexport function OnHoverMarker(map: ol.Map, hoverInteraction: Select) {\n  const previewContainer = document.getElementById(\"preview-container\");\n\n  if (previewContainer == null) return;\n\n  // 创建预览 Overlay\n  const previewOverlay = new Overlay({\n    element: previewContainer,\n    positioning: \"center-center\", // 设置 DOM 元素在预览图层中的定位方式\n    offset: [0, -10], // 偏移量，根据需要调整\n    stopEvent: false, // 允许事件传递给地图\n  });\n\n  // 将预览 Overlay 添加到地图中\n  map.addOverlay(previewOverlay);\n\n  // 监听选中要素的事件\n  hoverInteraction.on(\"select\", function (event) {\n    if (event.selected.length > 0) {\n      const selectedFeature = event.selected[0];\n\n      // 设置预览容器中的内容（这里使用文本作为示例）\n      previewContainer.textContent = selectedFeature.get(\"name\");\n\n      const geometry = selectedFeature.getGeometry();\n      if (geometry instanceof Point) {\n        const coordinates = geometry.getCoordinates();\n        previewOverlay.setPosition(coordinates);\n      }\n\n      // 鼠标指针\n      map.getTargetElement().style.cursor = \"pointer\";\n    } else {\n      previewOverlay.setPosition(undefined);\n\n      // 鼠标指针\n      map.getTargetElement().style.cursor = \"default\";\n    }\n  });\n}\n","export const MARKER_MAP: MarkerMapType = {\n  安徽: {},\n  澳门: {},\n  北京: {},\n  福建: {\n    children: {\n      厦门: {\n        children: {\n          鼓浪屿: {\n            coords: [118.07, 24.45],\n          },\n          黄厝海滩: {\n            coords: [118.16, 24.44],\n          },\n        },\n      },\n    },\n  },\n  甘肃: {},\n  广东: {},\n  广西: {},\n  贵州: {},\n  海南: {},\n  河北: {},\n  河南: {},\n  黑龙江: {},\n  湖北: {},\n  湖南: {\n    children: {\n      长沙: {\n        children: {\n          橘子洲头: {\n            coords: [112.96, 28.17],\n          },\n          五一广场: {\n            coords: [112.976352, 28.194306],\n          },\n        },\n      },\n      张家界: {\n        coords: [110.480018, 29.069878],\n      },\n    },\n  },\n  吉林: {\n    children: {\n      长白山: {\n        coords: [127.5, 42.11],\n      },\n    },\n  },\n  江苏: {\n    children: {\n      南京: {\n        coords: [118.8, 32.09],\n      },\n    },\n  },\n  江西: {\n    children: {\n      南昌: {\n        coords: [115.85, 28.66],\n      },\n    },\n  },\n  辽宁: {},\n  内蒙古: {},\n  宁夏: {},\n  青海: {},\n  山东: {\n    children: {\n      泰山: {\n        coords: [117.135354, 36.192084],\n      },\n    },\n  },\n  山西: {},\n  陕西: {},\n  上海: {\n    children: {\n      迪斯尼: {\n        coords: [121.67, 31.14],\n      },\n      外滩: {\n        coords: [121.49, 31.23],\n      },\n    },\n  },\n  四川: {},\n  台湾: {},\n  天津: {},\n  西藏: {},\n  香港: {},\n  新疆: {},\n  云南: {\n    children: {\n      丽江: {\n        coords: [100.25, 26.81],\n      },\n      大理: {\n        coords: [100.3, 25.68],\n      },\n    },\n  },\n  浙江: {\n    children: {\n      舟山: {\n        coords: [122.106863, 30.016028],\n      },\n      杭州: {\n        coords: [120.1536, 30.2655],\n      },\n      宁波: {\n        coords: [121.18, 30.32],\n      },\n    },\n  },\n  重庆: {\n    coords: [106.55, 29.61],\n  },\n};\n","import ol, { Feature } from \"ol\";\nimport { Point } from \"ol/geom\";\nimport Vector from \"ol/layer/Vector\";\nimport SourceVector from \"ol/source/Vector\";\nimport { fromLonLat } from \"ol/proj\";\nimport { Style, Icon } from \"ol/style\";\nimport { MARKER_MAP } from \"~/data/datas\";\n\n/**\n * @abstract 标记点\n */\nexport function MarkPoint(map: ol.Map) {\n  const container = new Vector({\n    source: new SourceVector(),\n  });\n\n  map.addLayer(container);\n\n  //添加点\n  AddPoints(container, MARKER_MAP);\n\n  // 地图缩放时，刷新\n  map.getView().on(\"change:resolution\", container.changed);\n\n  return container;\n}\n\n/**\n * @abstract 添加点\n */\nexport function AddPoints(\n  container: Vector<any>,\n  markerMap: MarkerMapType\n) {\n  for (const name in markerMap) {\n    const item = markerMap[name];\n    if (item.coords) {\n      const pointFeature = CreatePointFeature(name, item.coords);\n      container.getSource().addFeature(pointFeature);\n    }\n    if (item.children) {\n      AddPoints(container, item.children);\n    }\n  }\n}\n\n/**\n * @abstract 创建点\n */\nexport function CreatePointFeature(name: string, coords: number[]) {\n  // 创建一个点要素\n  const pointFeature = new Feature({\n    geometry: new Point(fromLonLat(coords)), // 设置点的坐标\n    name, // 设置点的属性，可以根据需求设置其他属性\n  });\n\n  // 创建一个图标样式\n  const iconStyle = new Style({\n    image: new Icon({\n      src: \"/marker.svg\", // 图标的路径\n      scale: 1,\n      anchor: [0.5, 1], // 图标的锚点位置，[0.5, 1] 表示图标底部中心\n    }),\n  });\n  pointFeature.setStyle(iconStyle); // 设置点要素的样式\n\n  return pointFeature;\n}\n","import { Map } from \"ol\";\nexport * from \"./handleEvent\";\nexport * from \"./point\";\nimport { MarkPoint } from \"./point\";\nimport { OnHoverMarker } from \"./handleEvent\";\nimport { Select } from \"ol/interaction\";\nimport { pointerMove } from \"ol/events/condition\";\n\nexport function SetupMarker(map: Map) {\n  const container = MarkPoint(map);\n\n  // 创建鼠标悬停交互\n  const hoverInteraction = new Select({\n    layers: [container], // 指定可以触发交互的图层\n    condition: pointerMove, // 鼠标悬停触发条件\n    style: null, // 禁用默认样式\n  });\n\n  // 添加交互到地图\n  map.addInteraction(hoverInteraction);\n\n  OnHoverMarker(map, hoverInteraction);\n}\n","import { GeoJSON } from \"ol/format\";\nimport { Style, Text, Fill, Stroke } from \"ol/style\";\nimport Vector from \"ol/layer/Vector\";\nimport SourceVector from \"ol/source/Vector\";\nimport ol from \"ol\";\n\nexport function CreateBaseLayer(map: ol.Map) {\n  const vectorLayer = new Vector({\n    source: new SourceVector({\n      url: \"/src/geojson/all.json\",\n      format: new GeoJSON(),\n    }),\n  });\n  map.addLayer(vectorLayer);\n\n  // * 样式\n  const textStyle = function (feature: ol.Feature) {\n    return new Style({\n      text: new Text({\n        text: feature.get(\"name\"), // 假设GeoJSON属性中有名为 'name' 的属性来表示城市名称\n        font: \"12px Arial\",\n        fill: new Fill({ color: \"black\" }),\n        stroke: new Stroke({ color: \"white\", width: 2 }),\n      }),\n    });\n  };\n  const defaultStyle = new Style({\n    stroke: new Stroke({\n      color: \"#ddd\",\n      width: 1,\n    }),\n  });\n  vectorLayer.setStyle((feature: any) => [textStyle(feature), defaultStyle]);\n}\n","export const ProvinceScope: Record<string, number[]> = {\n  安徽: [114.878463, 29.395191, 119.645188, 34.65234],\n  澳门: [113.528164, 22.109142, 113.598861, 22.217034],\n  北京: [115.416827, 39.442078, 117.508251, 41.058964],\n  福建: [115.84634, 23.500683, 120.722095, 28.317231],\n  甘肃: [92.337827, 32.596328, 108.709007, 42.794532],\n  广东: [109.664816, 20.223273, 117.303484, 25.519951],\n  广西: [104.446538, 20.902306, 112.05675, 26.388528],\n  贵州: [103.599417, 24.620914, 109.556069, 29.224344],\n  海南: [108.614575, 8.30204, 117.842823, 20.16146],\n  河北: [113.454863, 36.048718, 119.84879, 42.615453],\n  河南: [110.35571, 31.3844, 116.644831, 36.366508],\n  黑龙江: [121.183134, 43.422993, 135.088511, 53.560901],\n  湖北: [108.362545, 29.032769, 116.132865, 33.272876],\n  湖南: [108.786106, 24.643089, 114.256514, 30.1287],\n  吉林: [121.638964, 40.864207, 131.309886, 46.302152],\n  江苏: [116.355183, 30.76028, 121.927472, 35.127197],\n  江西: [89.551219, 8.972204, 124.57284, 40.256391],\n  辽宁: [118.839668, 38.72154, 125.785614, 43.488548],\n  内蒙古: [97.17172, 37.406647, 126.065581, 53.333779],\n  宁夏: [104.284332, 35.238497, 107.661713, 39.387783],\n  青海: [89.401764, 31.600668, 103.068897, 39.212599],\n  山东: [114.810126, 34.377357, 122.705605, 38.399928],\n  山西: [110.230241, 34.583784, 114.56294, 40.744953],\n  陕西: [105.488313, 31.706862, 111.241907, 39.582532],\n  上海: [120.852326, 30.691701, 122.118227, 31.874634],\n  四川: [97.347493, 26.048207, 108.54257, 34.315239],\n  台湾: [119.314417, 21.896939, 123.701571, 25.938831],\n  天津: [116.702073, 38.554824, 118.059209, 40.251765],\n  西藏: [78.386053, 26.853453, 99.115351, 36.484529],\n  香港: [113.815684, 22.134935, 114.499703, 22.566546],\n  新疆: [73.501142, 34.336146, 96.384783, 49.183097],\n  云南: [97.527278, 21.142312, 106.196958, 29.225286],\n  浙江: [118.022574, 26.643625, 122.834203, 31.182556],\n  重庆: [110.195637, 28.164706, 105.289838, 32.204171],\n};\n","import Vector from \"ol/layer/Vector\";\nimport SourceVector from \"ol/source/Vector\";\nimport { GeoJSON } from \"ol/format\";\nimport { Style, Text, Fill, Stroke } from \"ol/style\";\nimport { ProvinceScope } from \"~/data/province\";\nimport ol from \"ol\";\n\nconst textStyle = function (feature: ol.Feature) {\n  return new Style({\n    text: new Text({\n      text: feature.get(\"name\"), // 假设GeoJSON属性中有名为 'name' 的属性来表示城市名称\n      font: \"12px Arial\",\n      fill: new Fill({ color: \"black\" }),\n      stroke: new Stroke({ color: \"white\", width: 2 }),\n    }),\n  });\n};\n\nconst cityLayer: Record<string, Vector<any>> = {};\n\nfor (const key in ProvinceScope) {\n  cityLayer[key] = new Vector({\n    source: new SourceVector({\n      url: `/src/geojson/${key}.json`,\n      format: new GeoJSON(),\n    }),\n  });\n}\n\nconst defaultStyle = new Style({\n  stroke: new Stroke({\n    color: \"#ddd\",\n    width: 1,\n  }),\n});\n\nexport function AddLayer(map: ol.Map, city: string) {\n  const layer = cityLayer[city];\n  if (!layer) return;\n\n  if (!map.getLayers().getArray().includes(layer)) {\n    layer.setStyle((f: any) => [textStyle(f), defaultStyle]);\n\n    map.addLayer(layer);\n  } else {\n    layer.setVisible(true);\n  }\n}\n\nexport function RemoveLayer(map: ol.Map, city: string) {\n  const layer = cityLayer[city];\n  if (!layer) return;\n\n  if (map.getLayers().getArray().includes(layer)) {\n    layer.setVisible(false);\n  }\n}\n","import { transformExtent } from \"ol/proj\";\nimport { AddLayer, RemoveLayer } from \"./provinceLayer\";\nimport { intersects } from \"ol/extent\";\nimport { ProvinceScope } from \"~/data/province\";\nimport ol from \"ol\";\n\nexport function AddEventListener(map: ol.Map, eventStr: any) {\n  map.getView().on(eventStr, function (event) {\n    const mapView = event.target;\n    const zoom = event.target.getZoom(); // 获取新的缩放级别\n\n    if (zoom > 7) {\n      const currentExtent = mapView.calculateExtent(map.getSize()); // 正确的方法\n\n      const transformedExtent = transformExtent(\n        currentExtent,\n        mapView.getProjection(),\n        \"EPSG:4326\"\n      );\n\n      for (const key in ProvinceScope) {\n        const city = ProvinceScope[key];\n        const isCityInView = intersects(city, transformedExtent);\n        if (isCityInView) {\n          AddLayer(map, key);\n        } else {\n          RemoveLayer(map, key);\n        }\n      }\n    } else {\n      for (const key in ProvinceScope) {\n        RemoveLayer(map, key);\n      }\n    }\n  });\n}\n","window.addEventListener(\"load\", () => {\n  const canvas = document.createElement(\"canvas\");\n  const contextOptions = { willReadFrequently: true };\n\n  if (\n    Object.hasOwn(canvas, \"getContext\") &&\n    typeof canvas.getContext === \"function\"\n  ) {\n    const context = canvas.getContext(\"2d\", contextOptions);\n    if (context && (context as Any).willReadFrequently === true) {\n      console.log(\"浏览器支持 willReadFrequently 属性\");\n    } else {\n      console.log(\"浏览器不支持 willReadFrequently 属性\");\n    }\n  } else {\n    console.log(\"浏览器不支持 2D Canvas 绘图功能\");\n  }\n});\n","<script setup lang=\"ts\">\nimport { Map, View } from \"ol\";\nimport { fromLonLat } from \"ol/proj\";\nimport { CreateBaseLayer, AddEventListener, SetupMarker } from \"~/core\";\n\nconst DefaultOptions = {\n  center: [120.1552, 30.2741],\n  zoom: 4,\n  minZoom: 3,\n  maxZoom: 15,\n};\n\nonMounted(() => {\n  const map = new Map({\n    target: \"map\",\n    layers: [],\n    view: new View({\n      center: fromLonLat(DefaultOptions.center),\n      zoom: DefaultOptions.zoom,\n      minZoom: DefaultOptions.minZoom,\n      maxZoom: DefaultOptions.maxZoom,\n    }),\n  });\n\n  CreateBaseLayer(map);\n\n  SetupMarker(map);\n\n  AddEventListener(map, \"change:resolution\");\n});\n</script>\n\n<template>\n  <div id=\"map\"></div>\n  <div id=\"preview-container\" class=\"preview-container\"></div>\n</template>\n","import __pages_import_0__ from \"/src/views/index.vue\";\nconst __pages_import_1__ = () => import(\"/src/views/Test.md\");\n\nconst routes = [{\"name\":\"index\",\"path\":\"/\",\"component\":__pages_import_0__,\"props\":true},{\"name\":\"Test\",\"path\":\"/test\",\"component\":__pages_import_1__,\"props\":true}];\n\nexport default routes;","import { ViteSSG } from \"vite-ssg\";\nimport App from \"./App.vue\";\nimport \"./styles/index.less\";\nimport \"ol/ol.css\";\nimport routes from \"pages-generated\";\n\nexport const createApp = ViteSSG(App, { routes });\n"],"names":["textStyle","defaultStyle","__pages_import_0__"],"mappings":"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"}